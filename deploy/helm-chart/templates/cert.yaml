---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.cert.name }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-6"
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/status
      - configmaps/status
      - secrets/status
    verbs:
      - get
      - update
      - patch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.cert.name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-6"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.cert.name }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.cert.name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.cert.name }}
    namespace: {{ .Release.Namespace }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.cert.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cert.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-5"
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/connector
                operator: Exists
      initContainers:
      - name: cert-gen-ca
        image: {{ .Values.cert.image.repository }}:{{ .Values.cert.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.cert.image.pullPolicy }}
        args:
        - gen
        - ca
        - -n
        - {{ .Release.Namespace }}

      - name: cert-gen-api-server
        image: {{ .Values.cert.image.repository }}:{{ .Values.cert.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.cert.image.pullPolicy }}
        args:
        - gen
        - api-server
        - --ips 10.20.8.20
        - --secret-name api-server-tls
        - -n
        - {{ .Release.Namespace }}

      containers:
      - name: cert-true
        image: {{ .Values.cert.image.repository }}:{{ .Values.cert.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.cert.image.pullPolicy }}
        command:
        - "true"
      restartPolicy: Never
      serviceAccountName: {{ .Values.cert.name }}
  backoffLimit: 1
