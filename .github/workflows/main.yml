name: build

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'v*'
    paths-ignore:
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: fabedge/connector
          file: build/connector/Dockerfile

        - platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: fabedge/operator
          file: build/operator/Dockerfile

        - platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: fabedge/agent
          file: build/agent/Dockerfile

        - platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: fabedge/cert
          file: build/cert/Dockerfile

        - platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: fabedge/cloud-agent
          file: build/cloud-agent/Dockerfile

    steps:
    - uses: actions/checkout@v2

    - name: Set tags
      shell: bash
      env:
        TAGS: ${{ matrix.tags }}
      run: |
        if [[ ${TAGS} =~ ":" ]]; then
          echo "::set-output name=tags::${TAGS}"
        else
          echo "::set-output name=tags::${TAGS}:${GITHUB_REF##*/}"
        fi
      id: set_tags

    - name: Remove proxies
      run: |
        bash build/utils/no_proxy.sh

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: ${{ matrix.platforms }}
        push: true
        tags: ${{ steps.set_tags.outputs.tags }}
        file: ${{ matrix.file }}
